2025-08-08 15:11:57,288 - INFO - Processing task: Task(domain=miconic, instance=p18)
2025-08-08 15:11:57,288 - INFO - Using model: gemini-2.5-flash-lite
2025-08-08 15:11:57,288 - INFO - Generation parameters: {'max_output_tokens': 48000, 'top_p': 0.95, 'temperature': 1.0, 'top_k': 64, 'thinking_config': {'thinking_budget': -1}, 'wait_time': 7}
2025-08-08 15:11:59,475 - INFO - Prompt:
<prompt>
<problem-description-with-landmarks>
You are a highly-skilled professor in AI planning. Your task is to generate a plan for a PDDL instance from the domain <domain>miconic</domain>. You will be given the PDDL domain file, the PDDL instance file, and the set of action landmarks for the instance. Action landmarks are actions that must be part of any valid plan for the task. You need to return the plan between the tags <plan> and </plan>. You will receive two examples to help you in generating the plan.
</problem-description-with-landmarks> 

This is the PDDL domain file of the miconic domain:
<domain-file>
(define (domain miconic)
(:requirements :strips)
(:types
passenger - object
floor - object
)
(:predicates
(origin ?person - passenger ?floor - floor)
(destin ?person - passenger ?floor - floor)
(above ?floor1 - floor ?floor2 - floor)
(boarded ?person - passenger)
(not-boarded ?person - passenger)
(served ?person - passenger)
(not-served ?person - passenger)
(lift-at ?floor - floor)
)
(:action board
:parameters (?f - floor ?p - passenger)
:precondition (and (lift-at ?f) (origin ?p ?f))
:effect (boarded ?p)
)
(:action depart
:parameters (?f - floor ?p - passenger)
:precondition (and (lift-at ?f) (destin ?p ?f)
(boarded ?p))
:effect (and (not (boarded ?p))
(served ?p))
)
(:action up
:parameters (?f1 - floor ?f2 - floor)
:precondition (and (lift-at ?f1) (above ?f1 ?f2))
:effect (and (lift-at ?f2) (not (lift-at ?f1)))
)
(:action down
:parameters (?f1 - floor ?f2 - floor)
:precondition (and (lift-at ?f1) (above ?f2 ?f1))
:effect (and (lift-at ?f2) (not (lift-at ?f1)))
)
)
</domain-file>

This is the PDDL instance file, for which you need to generate a plan:
<instance-file>
(define (problem mixed-f40-p20-u0-v0-d0-a0-n0-A0-B0-N0-F0)
(:domain miconic)
(:objects p0 p1 p2 p3 p4 p5 p6 p7 p8 p9
p10 p11 p12 p13 p14 p15 p16 p17 p18 p19 - passenger
f0 f1 f2 f3 f4 f5 f6 f7 f8 f9
f10 f11 f12 f13 f14 f15 f16 f17 f18 f19
f20 f21 f22 f23 f24 f25 f26 f27 f28 f29
f30 f31 f32 f33 f34 f35 f36 f37 f38 f39 - floor)
(:init
(above f0 f1)
(above f0 f2)
(above f0 f3)
(above f0 f4)
(above f0 f5)
(above f0 f6)
(above f0 f7)
(above f0 f8)
(above f0 f9)
(above f0 f10)
(above f0 f11)
(above f0 f12)
(above f0 f13)
(above f0 f14)
(above f0 f15)
(above f0 f16)
(above f0 f17)
(above f0 f18)
(above f0 f19)
(above f0 f20)
(above f0 f21)
(above f0 f22)
(above f0 f23)
(above f0 f24)
(above f0 f25)
(above f0 f26)
(above f0 f27)
(above f0 f28)
(above f0 f29)
(above f0 f30)
(above f0 f31)
(above f0 f32)
(above f0 f33)
(above f0 f34)
(above f0 f35)
(above f0 f36)
(above f0 f37)
(above f0 f38)
(above f0 f39)
(above f1 f2)
(above f1 f3)
(above f1 f4)
(above f1 f5)
(above f1 f6)
(above f1 f7)
(above f1 f8)
(above f1 f9)
(above f1 f10)
(above f1 f11)
(above f1 f12)
(above f1 f13)
(above f1 f14)
(above f1 f15)
(above f1 f16)
(above f1 f17)
(above f1 f18)
(above f1 f19)
(above f1 f20)
(above f1 f21)
(above f1 f22)
(above f1 f23)
(above f1 f24)
(above f1 f25)
(above f1 f26)
(above f1 f27)
(above f1 f28)
(above f1 f29)
(above f1 f30)
(above f1 f31)
(above f1 f32)
(above f1 f33)
(above f1 f34)
(above f1 f35)
(above f1 f36)
(above f1 f37)
(above f1 f38)
(above f1 f39)
(above f2 f3)
(above f2 f4)
(above f2 f5)
(above f2 f6)
(above f2 f7)
(above f2 f8)
(above f2 f9)
(above f2 f10)
(above f2 f11)
(above f2 f12)
(above f2 f13)
(above f2 f14)
(above f2 f15)
(above f2 f16)
(above f2 f17)
(above f2 f18)
(above f2 f19)
(above f2 f20)
(above f2 f21)
(above f2 f22)
(above f2 f23)
(above f2 f24)
(above f2 f25)
(above f2 f26)
(above f2 f27)
(above f2 f28)
(above f2 f29)
(above f2 f30)
(above f2 f31)
(above f2 f32)
(above f2 f33)
(above f2 f34)
(above f2 f35)
(above f2 f36)
(above f2 f37)
(above f2 f38)
(above f2 f39)
(above f3 f4)
(above f3 f5)
(above f3 f6)
(above f3 f7)
(above f3 f8)
(above f3 f9)
(above f3 f10)
(above f3 f11)
(above f3 f12)
(above f3 f13)
(above f3 f14)
(above f3 f15)
(above f3 f16)
(above f3 f17)
(above f3 f18)
(above f3 f19)
(above f3 f20)
(above f3 f21)
(above f3 f22)
(above f3 f23)
(above f3 f24)
(above f3 f25)
(above f3 f26)
(above f3 f27)
(above f3 f28)
(above f3 f29)
(above f3 f30)
(above f3 f31)
(above f3 f32)
(above f3 f33)
(above f3 f34)
(above f3 f35)
(above f3 f36)
(above f3 f37)
(above f3 f38)
(above f3 f39)
(above f4 f5)
(above f4 f6)
(above f4 f7)
(above f4 f8)
(above f4 f9)
(above f4 f10)
(above f4 f11)
(above f4 f12)
(above f4 f13)
(above f4 f14)
(above f4 f15)
(above f4 f16)
(above f4 f17)
(above f4 f18)
(above f4 f19)
(above f4 f20)
(above f4 f21)
(above f4 f22)
(above f4 f23)
(above f4 f24)
(above f4 f25)
(above f4 f26)
(above f4 f27)
(above f4 f28)
(above f4 f29)
(above f4 f30)
(above f4 f31)
(above f4 f32)
(above f4 f33)
(above f4 f34)
(above f4 f35)
(above f4 f36)
(above f4 f37)
(above f4 f38)
(above f4 f39)
(above f5 f6)
(above f5 f7)
(above f5 f8)
(above f5 f9)
(above f5 f10)
(above f5 f11)
(above f5 f12)
(above f5 f13)
(above f5 f14)
(above f5 f15)
(above f5 f16)
(above f5 f17)
(above f5 f18)
(above f5 f19)
(above f5 f20)
(above f5 f21)
(above f5 f22)
(above f5 f23)
(above f5 f24)
(above f5 f25)
(above f5 f26)
(above f5 f27)
(above f5 f28)
(above f5 f29)
(above f5 f30)
(above f5 f31)
(above f5 f32)
(above f5 f33)
(above f5 f34)
(above f5 f35)
(above f5 f36)
(above f5 f37)
(above f5 f38)
(above f5 f39)
(above f6 f7)
(above f6 f8)
(above f6 f9)
(above f6 f10)
(above f6 f11)
(above f6 f12)
(above f6 f13)
(above f6 f14)
(above f6 f15)
(above f6 f16)
(above f6 f17)
(above f6 f18)
(above f6 f19)
(above f6 f20)
(above f6 f21)
(above f6 f22)
(above f6 f23)
(above f6 f24)
(above f6 f25)
(above f6 f26)
(above f6 f27)
(above f6 f28)
(above f6 f29)
(above f6 f30)
(above f6 f31)
(above f6 f32)
(above f6 f33)
(above f6 f34)
(above f6 f35)
(above f6 f36)
(above f6 f37)
(above f6 f38)
(above f6 f39)
(above f7 f8)
(above f7 f9)
(above f7 f10)
(above f7 f11)
(above f7 f12)
(above f7 f13)
(above f7 f14)
(above f7 f15)
(above f7 f16)
(above f7 f17)
(above f7 f18)
(above f7 f19)
(above f7 f20)
(above f7 f21)
(above f7 f22)
(above f7 f23)
(above f7 f24)
(above f7 f25)
(above f7 f26)
(above f7 f27)
(above f7 f28)
(above f7 f29)
(above f7 f30)
(above f7 f31)
(above f7 f32)
(above f7 f33)
(above f7 f34)
(above f7 f35)
(above f7 f36)
(above f7 f37)
(above f7 f38)
(above f7 f39)
(above f8 f9)
(above f8 f10)
(above f8 f11)
(above f8 f12)
(above f8 f13)
(above f8 f14)
(above f8 f15)
(above f8 f16)
(above f8 f17)
(above f8 f18)
(above f8 f19)
(above f8 f20)
(above f8 f21)
(above f8 f22)
(above f8 f23)
(above f8 f24)
(above f8 f25)
(above f8 f26)
(above f8 f27)
(above f8 f28)
(above f8 f29)
(above f8 f30)
(above f8 f31)
(above f8 f32)
(above f8 f33)
(above f8 f34)
(above f8 f35)
(above f8 f36)
(above f8 f37)
(above f8 f38)
(above f8 f39)
(above f9 f10)
(above f9 f11)
(above f9 f12)
(above f9 f13)
(above f9 f14)
(above f9 f15)
(above f9 f16)
(above f9 f17)
(above f9 f18)
(above f9 f19)
(above f9 f20)
(above f9 f21)
(above f9 f22)
(above f9 f23)
(above f9 f24)
(above f9 f25)
(above f9 f26)
(above f9 f27)
(above f9 f28)
(above f9 f29)
(above f9 f30)
(above f9 f31)
(above f9 f32)
(above f9 f33)
(above f9 f34)
(above f9 f35)
(above f9 f36)
(above f9 f37)
(above f9 f38)
(above f9 f39)
(above f10 f11)
(above f10 f12)
(above f10 f13)
(above f10 f14)
(above f10 f15)
(above f10 f16)
(above f10 f17)
(above f10 f18)
(above f10 f19)
(above f10 f20)
(above f10 f21)
(above f10 f22)
(above f10 f23)
(above f10 f24)
(above f10 f25)
(above f10 f26)
(above f10 f27)
(above f10 f28)
(above f10 f29)
(above f10 f30)
(above f10 f31)
(above f10 f32)
(above f10 f33)
(above f10 f34)
(above f10 f35)
(above f10 f36)
(above f10 f37)
(above f10 f38)
(above f10 f39)
(above f11 f12)
(above f11 f13)
(above f11 f14)
(above f11 f15)
(above f11 f16)
(above f11 f17)
(above f11 f18)
(above f11 f19)
(above f11 f20)
(above f11 f21)
(above f11 f22)
(above f11 f23)
(above f11 f24)
(above f11 f25)
(above f11 f26)
(above f11 f27)
(above f11 f28)
(above f11 f29)
(above f11 f30)
(above f11 f31)
(above f11 f32)
(above f11 f33)
(above f11 f34)
(above f11 f35)
(above f11 f36)
(above f11 f37)
(above f11 f38)
(above f11 f39)
(above f12 f13)
(above f12 f14)
(above f12 f15)
(above f12 f16)
(above f12 f17)
(above f12 f18)
(above f12 f19)
(above f12 f20)
(above f12 f21)
(above f12 f22)
(above f12 f23)
(above f12 f24)
(above f12 f25)
(above f12 f26)
(above f12 f27)
(above f12 f28)
(above f12 f29)
(above f12 f30)
(above f12 f31)
(above f12 f32)
(above f12 f33)
(above f12 f34)
(above f12 f35)
(above f12 f36)
(above f12 f37)
(above f12 f38)
(above f12 f39)
(above f13 f14)
(above f13 f15)
(above f13 f16)
(above f13 f17)
(above f13 f18)
(above f13 f19)
(above f13 f20)
(above f13 f21)
(above f13 f22)
(above f13 f23)
(above f13 f24)
(above f13 f25)
(above f13 f26)
(above f13 f27)
(above f13 f28)
(above f13 f29)
(above f13 f30)
(above f13 f31)
(above f13 f32)
(above f13 f33)
(above f13 f34)
(above f13 f35)
(above f13 f36)
(above f13 f37)
(above f13 f38)
(above f13 f39)
(above f14 f15)
(above f14 f16)
(above f14 f17)
(above f14 f18)
(above f14 f19)
(above f14 f20)
(above f14 f21)
(above f14 f22)
(above f14 f23)
(above f14 f24)
(above f14 f25)
(above f14 f26)
(above f14 f27)
(above f14 f28)
(above f14 f29)
(above f14 f30)
(above f14 f31)
(above f14 f32)
(above f14 f33)
(above f14 f34)
(above f14 f35)
(above f14 f36)
(above f14 f37)
(above f14 f38)
(above f14 f39)
(above f15 f16)
(above f15 f17)
(above f15 f18)
(above f15 f19)
(above f15 f20)
(above f15 f21)
(above f15 f22)
(above f15 f23)
(above f15 f24)
(above f15 f25)
(above f15 f26)
(above f15 f27)
(above f15 f28)
(above f15 f29)
(above f15 f30)
(above f15 f31)
(above f15 f32)
(above f15 f33)
(above f15 f34)
(above f15 f35)
(above f15 f36)
(above f15 f37)
(above f15 f38)
(above f15 f39)
(above f16 f17)
(above f16 f18)
(above f16 f19)
(above f16 f20)
(above f16 f21)
(above f16 f22)
(above f16 f23)
(above f16 f24)
(above f16 f25)
(above f16 f26)
(above f16 f27)
(above f16 f28)
(above f16 f29)
(above f16 f30)
(above f16 f31)
(above f16 f32)
(above f16 f33)
(above f16 f34)
(above f16 f35)
(above f16 f36)
(above f16 f37)
(above f16 f38)
(above f16 f39)
(above f17 f18)
(above f17 f19)
(above f17 f20)
(above f17 f21)
(above f17 f22)
(above f17 f23)
(above f17 f24)
(above f17 f25)
(above f17 f26)
(above f17 f27)
(above f17 f28)
(above f17 f29)
(above f17 f30)
(above f17 f31)
(above f17 f32)
(above f17 f33)
(above f17 f34)
(above f17 f35)
(above f17 f36)
(above f17 f37)
(above f17 f38)
(above f17 f39)
(above f18 f19)
(above f18 f20)
(above f18 f21)
(above f18 f22)
(above f18 f23)
(above f18 f24)
(above f18 f25)
(above f18 f26)
(above f18 f27)
(above f18 f28)
(above f18 f29)
(above f18 f30)
(above f18 f31)
(above f18 f32)
(above f18 f33)
(above f18 f34)
(above f18 f35)
(above f18 f36)
(above f18 f37)
(above f18 f38)
(above f18 f39)
(above f19 f20)
(above f19 f21)
(above f19 f22)
(above f19 f23)
(above f19 f24)
(above f19 f25)
(above f19 f26)
(above f19 f27)
(above f19 f28)
(above f19 f29)
(above f19 f30)
(above f19 f31)
(above f19 f32)
(above f19 f33)
(above f19 f34)
(above f19 f35)
(above f19 f36)
(above f19 f37)
(above f19 f38)
(above f19 f39)
(above f20 f21)
(above f20 f22)
(above f20 f23)
(above f20 f24)
(above f20 f25)
(above f20 f26)
(above f20 f27)
(above f20 f28)
(above f20 f29)
(above f20 f30)
(above f20 f31)
(above f20 f32)
(above f20 f33)
(above f20 f34)
(above f20 f35)
(above f20 f36)
(above f20 f37)
(above f20 f38)
(above f20 f39)
(above f21 f22)
(above f21 f23)
(above f21 f24)
(above f21 f25)
(above f21 f26)
(above f21 f27)
(above f21 f28)
(above f21 f29)
(above f21 f30)
(above f21 f31)
(above f21 f32)
(above f21 f33)
(above f21 f34)
(above f21 f35)
(above f21 f36)
(above f21 f37)
(above f21 f38)
(above f21 f39)
(above f22 f23)
(above f22 f24)
(above f22 f25)
(above f22 f26)
(above f22 f27)
(above f22 f28)
(above f22 f29)
(above f22 f30)
(above f22 f31)
(above f22 f32)
(above f22 f33)
(above f22 f34)
(above f22 f35)
(above f22 f36)
(above f22 f37)
(above f22 f38)
(above f22 f39)
(above f23 f24)
(above f23 f25)
(above f23 f26)
(above f23 f27)
(above f23 f28)
(above f23 f29)
(above f23 f30)
(above f23 f31)
(above f23 f32)
(above f23 f33)
(above f23 f34)
(above f23 f35)
(above f23 f36)
(above f23 f37)
(above f23 f38)
(above f23 f39)
(above f24 f25)
(above f24 f26)
(above f24 f27)
(above f24 f28)
(above f24 f29)
(above f24 f30)
(above f24 f31)
(above f24 f32)
(above f24 f33)
(above f24 f34)
(above f24 f35)
(above f24 f36)
(above f24 f37)
(above f24 f38)
(above f24 f39)
(above f25 f26)
(above f25 f27)
(above f25 f28)
(above f25 f29)
(above f25 f30)
(above f25 f31)
(above f25 f32)
(above f25 f33)
(above f25 f34)
(above f25 f35)
(above f25 f36)
(above f25 f37)
(above f25 f38)
(above f25 f39)
(above f26 f27)
(above f26 f28)
(above f26 f29)
(above f26 f30)
(above f26 f31)
(above f26 f32)
(above f26 f33)
(above f26 f34)
(above f26 f35)
(above f26 f36)
(above f26 f37)
(above f26 f38)
(above f26 f39)
(above f27 f28)
(above f27 f29)
(above f27 f30)
(above f27 f31)
(above f27 f32)
(above f27 f33)
(above f27 f34)
(above f27 f35)
(above f27 f36)
(above f27 f37)
(above f27 f38)
(above f27 f39)
(above f28 f29)
(above f28 f30)
(above f28 f31)
(above f28 f32)
(above f28 f33)
(above f28 f34)
(above f28 f35)
(above f28 f36)
(above f28 f37)
(above f28 f38)
(above f28 f39)
(above f29 f30)
(above f29 f31)
(above f29 f32)
(above f29 f33)
(above f29 f34)
(above f29 f35)
(above f29 f36)
(above f29 f37)
(above f29 f38)
(above f29 f39)
(above f30 f31)
(above f30 f32)
(above f30 f33)
(above f30 f34)
(above f30 f35)
(above f30 f36)
(above f30 f37)
(above f30 f38)
(above f30 f39)
(above f31 f32)
(above f31 f33)
(above f31 f34)
(above f31 f35)
(above f31 f36)
(above f31 f37)
(above f31 f38)
(above f31 f39)
(above f32 f33)
(above f32 f34)
(above f32 f35)
(above f32 f36)
(above f32 f37)
(above f32 f38)
(above f32 f39)
(above f33 f34)
(above f33 f35)
(above f33 f36)
(above f33 f37)
(above f33 f38)
(above f33 f39)
(above f34 f35)
(above f34 f36)
(above f34 f37)
(above f34 f38)
(above f34 f39)
(above f35 f36)
(above f35 f37)
(above f35 f38)
(above f35 f39)
(above f36 f37)
(above f36 f38)
(above f36 f39)
(above f37 f38)
(above f37 f39)
(above f38 f39)
(origin p0 f10)
(destin p0 f39)
(origin p1 f28)
(destin p1 f15)
(origin p2 f21)
(destin p2 f18)
(origin p3 f24)
(destin p3 f37)
(origin p4 f25)
(destin p4 f27)
(origin p5 f22)
(destin p5 f19)
(origin p6 f29)
(destin p6 f13)
(origin p7 f37)
(destin p7 f9)
(origin p8 f14)
(destin p8 f13)
(origin p9 f7)
(destin p9 f10)
(origin p10 f2)
(destin p10 f12)
(origin p11 f9)
(destin p11 f35)
(origin p12 f7)
(destin p12 f31)
(origin p13 f10)
(destin p13 f30)
(origin p14 f16)
(destin p14 f23)
(origin p15 f13)
(destin p15 f26)
(origin p16 f22)
(destin p16 f2)
(origin p17 f1)
(destin p17 f36)
(origin p18 f12)
(destin p18 f17)
(origin p19 f33)
(destin p19 f37)
(lift-at f0)
)
(:goal
(and
(served p0)
(served p1)
(served p2)
(served p3)
(served p4)
(served p5)
(served p6)
(served p7)
(served p8)
(served p9)
(served p10)
(served p11)
(served p12)
(served p13)
(served p14)
(served p15)
(served p16)
(served p17)
(served p18)
(served p19)
))
)
</instance-file>

This is a set of action landmarks for the instance you need to generate a plan for:
<landmarks-set>
(board f29 p6)
(board f2 p10)
(board f14 p8)
(board f24 p3)
(board f22 p5)
(board f22 p16)
(board f13 p15)
(board f10 p13)
(board f10 p0)
(board f7 p9)
(board f7 p12)
(board f21 p2)
(board f37 p7)
(board f25 p4)
(board f28 p1)
(board f1 p17)
(board f16 p14)
(board f12 p18)
(board f9 p11)
(board f33 p19)
(depart f19 p5)
(depart f15 p1)
(depart f2 p16)
(depart f30 p13)
(depart f18 p2)
(depart f31 p12)
(depart f13 p6)
(depart f13 p8)
(depart f10 p9)
(depart f35 p11)
(depart f23 p14)
(depart f37 p19)
(depart f37 p3)
(depart f36 p17)
(depart f27 p4)
(depart f17 p18)
(depart f26 p15)
(depart f12 p10)
(depart f9 p7)
(depart f39 p0)
</landmarks-set>

This is the PDDL domain file of another domain, called Storage, which serves as an example:
<domain-file-storage-example>
(define (domain Storage-Propositional)
    (:requirements :typing)
    (:types
        hoist crate place area - object
        container depot - place
        storearea transitarea - area
    )

    (:predicates
        (clear ?s - storearea)
        (in ?x -
            (either storearea crate) ?p - place)
        (available ?h - hoist)
        (lifting ?h - hoist ?c - crate)
        (at ?h - hoist ?a - area)
        (on ?c - crate ?s - storearea)
        (connected ?a1 ?a2 - area)
        (compatible ?c1 ?c2 - crate)
    )

    (:action lift
        :parameters (?h - hoist ?c - crate ?a1 - storearea ?a2 - area ?p - place)
        :precondition (and
            (connected ?a1 ?a2)
            (at ?h ?a2)
            (available ?h)
            (on ?c ?a1)
            (in ?a1 ?p))
        :effect (and
            (not (on ?c ?a1))
            (clear ?a1)
            (not (available ?h))
            (lifting ?h ?c)
            (not (in ?c ?p)))
    )

    (:action drop
        :parameters (?h - hoist ?c - crate ?a1 - storearea ?a2 - area ?p - place)
        :precondition (and
            (connected ?a1 ?a2)
            (at ?h ?a2)
            ( lifting ?h ?c)
            (clear ?a1)
            (in ?a1 ?p))
        :effect (and
            (not (lifting ?h ?c))
            (available ?h)
            (not (clear ?a1))
            (on ?c ?a1)
            (in ?c ?p))
    )

    (:action move
        :parameters (?h - hoist ?from ?to - storearea)
        :precondition (and
            (at ?h ?from)
            (clear ?to)
            (connected ?from ?to))
        :effect (and
            (not (at ?h ?from))
            (at ?h ?to)
            (not (clear ?to))
            (clear ?from))
    )

    (:action go-out
        :parameters (?h - hoist ?from - storearea ?to - transitarea)
        :precondition (and
            (at ?h ?from)
            (connected ?from ?to))
        :effect (and
            (not (at ?h ?from))
            (at ?h ?to)
            (clear ?from))
    )

    (:action go-in
        :parameters (?h - hoist ?from - transitarea ?to - storearea)
        :precondition (and
            (at ?h ?from)
            (connected ?from ?to)
            (clear ?to))
        :effect (and
            (not (at ?h ?from))
            (at ?h ?to)
            (not (clear ?to)))
    )
)
</domain-file-storage-example>

This is an example of a PDDL instance file from the Storage domain:
<instance-file-storage-example>
(define (problem storage-101)
	(:domain Storage-Propositional)
	(:objects
		depot48-1-1 depot49-1-1 depot50-1-1 depot50-1-2 depot50-1-3 container-0-0 container-0-1 container-0-2 container-0-3 - storearea
		hoist0 - hoist
		crate0 crate1 crate2 crate3 - crate
		container0 - container
		depot48 depot49 depot50 - depot
		loadarea - transitarea
	)
	(:init
		(connected depot50-1-1 depot50-1-2)
		(connected depot50-1-2 depot50-1-3)
		(connected depot50-1-2 depot50-1-1)
		(connected depot50-1-3 depot50-1-2)
		(in depot48-1-1 depot48)
		(in depot49-1-1 depot49)
		(in depot50-1-1 depot50)
		(in depot50-1-2 depot50)
		(in depot50-1-3 depot50)
		(on crate0 container-0-0)
		(on crate1 container-0-1)
		(on crate2 container-0-2)
		(on crate3 container-0-3)
		(in crate0 container0)
		(in crate1 container0)
		(in crate2 container0)
		(in crate3 container0)
		(in container-0-0 container0)
		(in container-0-1 container0)
		(in container-0-2 container0)
		(in container-0-3 container0)
		(connected loadarea container-0-0)
		(connected container-0-0 loadarea)
		(connected loadarea container-0-1)
		(connected container-0-1 loadarea)
		(connected loadarea container-0-2)
		(connected container-0-2 loadarea)
		(connected loadarea container-0-3)
		(connected container-0-3 loadarea)
		(connected depot48-1-1 loadarea)
		(connected loadarea depot48-1-1)
		(connected depot49-1-1 loadarea)
		(connected loadarea depot49-1-1)
		(connected depot50-1-1 loadarea)
		(connected loadarea depot50-1-1)
		(clear depot48-1-1)
		(clear depot50-1-1)
		(clear depot50-1-2)
		(clear depot50-1-3)
		(at hoist0 depot49-1-1)
		(available hoist0)
	)
	(:goal
		(and
			(in crate0 depot48)
			(in crate1 depot49)
			(in crate2 depot50)
			(in crate3 depot50)
        )
	)
)
</instance-file-storage-example>

This is a set of action landmarks for the Storage instance above:
<landmarks-set-storage-example>
(lift hoist0 crate2 container-0-2 loadarea container0)
(lift hoist0 crate3 container-0-3 loadarea container0)
(lift hoist0 crate1 container-0-1 loadarea container0)
(lift hoist0 crate0 container-0-0 loadarea container0)
(drop hoist0 crate1 depot49-1-1 loadarea depot49)
(drop hoist0 crate0 depot48-1-1 loadarea depot48)
(go-out hoist0 depot49-1-1 loadarea)
</landmarks-set-storage-example>

This is a plan for the Storage instance above:
<plan-storage-example>
(go-out hoist0 depot49-1-1 loadarea)
(lift hoist0 crate0 container-0-0 loadarea container0)
(drop hoist0 crate0 depot48-1-1 loadarea depot48)
(lift hoist0 crate1 container-0-1 loadarea container0)
(drop hoist0 crate1 depot49-1-1 loadarea depot49)
(lift hoist0 crate3 container-0-3 loadarea container0)
(go-in hoist0 loadarea depot50-1-1)
(drop hoist0 crate3 depot50-1-2 depot50-1-1 depot50)
(go-out hoist0 depot50-1-1 loadarea)
(lift hoist0 crate2 container-0-2 loadarea container0)
(drop hoist0 crate2 depot50-1-1 loadarea depot50)
</plan-storage-example>

This is the PDDL domain file of another domain, called Rovers, which serves as an example:
<domain-file-rovers-example>
(define (domain rover)
    (:requirements :strips :typing)
    (:types
        rover waypoint store camera mode lander objective
    )

    (:predicates
        (at ?x - rover ?y - waypoint)
        (at_lander ?x - lander ?y - waypoint)
        (can_traverse ?r - rover ?x - waypoint ?y - waypoint)
        (equipped_for_soil_analysis ?r - rover)
        (equipped_for_rock_analysis ?r - rover)
        (equipped_for_imaging ?r - rover)
        (empty ?s - store)
        (have_rock_analysis ?r - rover ?w - waypoint)
        (have_soil_analysis ?r - rover ?w - waypoint)
        (full ?s - store)
        (calibrated ?c - camera ?r - rover)
        (supports ?c - camera ?m - mode)
        (visible ?w - waypoint ?p - waypoint)
        (have_image ?r - rover ?o - objective ?m - mode)
        (communicated_soil_data ?w - waypoint)
        (communicated_rock_data ?w - waypoint)
        (communicated_image_data ?o - objective ?m - mode)
        (at_soil_sample ?w - waypoint)
        (at_rock_sample ?w - waypoint)
        (visible_from ?o - objective ?w - waypoint)
        (store_of ?s - store ?r - rover)
        (calibration_target ?i - camera ?o - objective)
        (on_board ?i - camera ?r - rover)
    )

    (:action navigate
        :parameters (?x - rover ?y - waypoint ?z - waypoint)
        :precondition (and
            (can_traverse ?x ?y ?z)
            (at ?x ?y)
            (visible ?y ?z))
        :effect (and
            (not (at ?x ?y))
            (at ?x ?z))
    )

    (:action sample_soil
        :parameters (?x - rover ?s - store ?p - waypoint)
        :precondition (and
            (at ?x ?p)
            (at_soil_sample ?p)
            (equipped_for_soil_analysis ?x)
            (store_of ?s ?x)
            (empty ?s))
        :effect (and
            (not (empty ?s))
            (full ?s)
            (have_soil_analysis ?x ?p)
            (not (at_soil_sample ?p)))
    )

    (:action sample_rock
        :parameters (?x - rover ?s - store ?p - waypoint)
        :precondition (and
            (at ?x ?p)
            (at_rock_sample ?p)
            (equipped_for_rock_analysis ?x)
            (store_of ?s ?x)
            (empty ?s))
        :effect (and
            (not (empty ?s))
            (full ?s)
            (have_rock_analysis ?x ?p)
            (not (at_rock_sample ?p)))
    )

    (:action drop
        :parameters (?x - rover ?y - store)
        :precondition (and
            (store_of ?y ?x)
            (full ?y))
        :effect (and
            (not (full ?y))
            (empty ?y))
    )

    (:action calibrate
        :parameters (?r - rover ?i - camera ?t - objective ?w - waypoint)
        :precondition (and
            (equipped_for_imaging ?r)
            (calibration_target ?i ?t)
            (at ?r ?w)
            (visible_from ?t ?w)
            (on_board ?i ?r))
        :effect (and
            (calibrated ?i ?r))
    )

    (:action take_image
        :parameters (?r - rover ?p - waypoint ?o - objective ?i - camera ?m - mode)
        :precondition (and
            (calibrated ?i ?r)
            (on_board ?i ?r)
            (equipped_for_imaging ?r)
            (supports ?i ?m)
            (visible_from ?o ?p)
            (at ?r ?p))
        :effect (and
            (have_image ?r ?o ?m)
            (not (calibrated ?i ?r)))
    )

    (:action communicate_soil_data
        :parameters (?r - rover ?l - lander ?p - waypoint ?x - waypoint ?y - waypoint)
        :precondition (and
            (at ?r ?x)
            (at_lander ?l ?y)
            (have_soil_analysis ?r ?p)
            (visible ?x ?y))
        :effect (and
            (communicated_soil_data ?p))
    )

    (:action communicate_rock_data
        :parameters (?r - rover ?l - lander ?p - waypoint ?x - waypoint ?y - waypoint)
        :precondition (and
            (at ?r ?x)
            (at_lander ?l ?y)
            (have_rock_analysis ?r ?p)
            (visible ?x ?y))
        :effect (and
            (communicated_rock_data ?p))
    )

    (:action communicate_image_data
        :parameters (?r - rover ?l - lander ?o - objective ?m - mode ?x - waypoint ?y - waypoint)
        :precondition (and
            (at ?r ?x)
            (at_lander ?l ?y)
            (have_image ?r ?o ?m)
            (visible ?x ?y))
        :effect (and
            (communicated_image_data ?o ?m))
    )
)
</domain-file-rovers-example>

This is an example of a PDDL instance file from the Rovers domain:
<instance-file-rovers-example>
(define (problem rover-04)
   (:domain rover)
   (:objects
      general - lander
      colour high_res low_res - mode
      rover1 - rover
      rover1store - store
      waypoint1 waypoint2 waypoint3 waypoint4 - waypoint
      camera1 - camera
      objective1 objective2 - objective
   )
   (:init
      (at_lander general waypoint2)
      (at rover1 waypoint1)
      (equipped_for_soil_analysis rover1)
      (equipped_for_rock_analysis rover1)
      (equipped_for_imaging rover1)
      (empty rover1store)
      (store_of rover1store rover1)
      (at_rock_sample waypoint1)
      (at_rock_sample waypoint2)
      (at_rock_sample waypoint4)
      (at_soil_sample waypoint1)
      (at_soil_sample waypoint4)
      (visible waypoint2 waypoint4)
      (visible waypoint1 waypoint2)
      (visible waypoint2 waypoint1)
      (visible waypoint3 waypoint1)
      (visible waypoint4 waypoint2)
      (visible waypoint1 waypoint3)
      (visible waypoint2 waypoint3)
      (visible waypoint3 waypoint2)
      (visible waypoint1 waypoint4)
      (visible waypoint4 waypoint1)
      (can_traverse rover1 waypoint2 waypoint4)
      (can_traverse rover1 waypoint1 waypoint2)
      (can_traverse rover1 waypoint2 waypoint1)
      (can_traverse rover1 waypoint3 waypoint1)
      (can_traverse rover1 waypoint4 waypoint2)
      (can_traverse rover1 waypoint1 waypoint3)
      (can_traverse rover1 waypoint2 waypoint3)
      (can_traverse rover1 waypoint3 waypoint2)
      (calibration_target camera1 objective1)
      (on_board camera1 rover1)
      (supports camera1 low_res)
      (supports camera1 colour)
      (supports camera1 high_res)
      (visible_from objective1 waypoint2)
      (visible_from objective2 waypoint4)
   )
   (:goal
      (and
         (communicated_rock_data waypoint1)
         (communicated_soil_data waypoint1)
         (communicated_soil_data waypoint4)
         (communicated_image_data objective1 low_res)
         (communicated_image_data objective1 colour))
   )
)
</instance-file-rovers-example>

This is a set of action landmarks for the Rovers instance above:
<landmarks-set-rovers-example>
(navigate rover1 waypoint2 waypoint4)
(sample_soil rover1 rover1store waypoint4)
(sample_soil rover1 rover1store waypoint1)
(sample_rock rover1 rover1store waypoint1)
(calibrate rover1 camera1 objective1 waypoint2)
(take_image rover1 waypoint2 objective1 camera1 low_res)
(take_image rover1 waypoint2 objective1 camera1 colour)
</landmarks-set-rovers-example>

This is a plan for the Rovers instance above:
<plan-rovers-example>
(sample_rock rover1 rover1store waypoint1)
(drop rover1 rover1store)
(communicate_rock_data rover1 general waypoint1 waypoint1 waypoint2)
(sample_soil rover1 rover1store waypoint1)
(drop rover1 rover1store)
(communicate_soil_data rover1 general waypoint1 waypoint1 waypoint2)
(navigate rover1 waypoint1 waypoint2)
(calibrate rover1 camera1 objective1 waypoint2)
(take_image rover1 waypoint2 objective1 camera1 colour)
(calibrate rover1 camera1 objective1 waypoint2)
(take_image rover1 waypoint2 objective1 camera1 low_res)
(navigate rover1 waypoint2 waypoint4)
(sample_soil rover1 rover1store waypoint4)
(communicate_soil_data rover1 general waypoint4 waypoint4 waypoint2)
(communicate_image_data rover1 general objective1 colour waypoint4 waypoint2)
(communicate_image_data rover1 general objective1 low_res waypoint4 waypoint2)
</plan-rovers-example>

Provide only the plan for the given instance. Here is a checklist to help you with your problem:
<checklist>
1) The plan must be in the same format as the examples above.
2) The plan should be preceded by the <plan> tag and should be followed by the </plan> tag.
3) The actions in the plan must be from the set of actions in the domain described above, that is, they must use the same name and the same number of parameters as one of the action schemas.
4) The plan must be valid, that is, each action must be applicable in the state it is applied, and the plan must end in a goal state.
</checklist>
</prompt>

2025-08-08 15:11:59,475 - INFO - Prompt metadata:
<prompt_metadata>
{'template': 'landmark', 'action_landmarks': ['(board f29 p6)', '(board f2 p10)', '(board f14 p8)', '(board f24 p3)', '(board f22 p5)', '(board f22 p16)', '(board f13 p15)', '(board f10 p13)', '(board f10 p0)', '(board f7 p9)', '(board f7 p12)', '(board f21 p2)', '(board f37 p7)', '(board f25 p4)', '(board f28 p1)', '(board f1 p17)', '(board f16 p14)', '(board f12 p18)', '(board f9 p11)', '(board f33 p19)', '(depart f19 p5)', '(depart f15 p1)', '(depart f2 p16)', '(depart f30 p13)', '(depart f18 p2)', '(depart f31 p12)', '(depart f13 p6)', '(depart f13 p8)', '(depart f10 p9)', '(depart f35 p11)', '(depart f23 p14)', '(depart f37 p19)', '(depart f37 p3)', '(depart f36 p17)', '(depart f27 p4)', '(depart f17 p18)', '(depart f26 p15)', '(depart f12 p10)', '(depart f9 p7)', '(depart f39 p0)'], 'num_action_landmarks': 40}
</prompt_metadata>

2025-08-08 15:11:59,475 - INFO - Sample: 1.
2025-08-08 15:11:59,475 - INFO - AFC is enabled with max remote calls: 10.
2025-08-08 15:12:31,269 - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-lite:generateContent "HTTP/1.1 200 OK"
2025-08-08 15:12:31,270 - INFO - AFC remote call 1 is done.
2025-08-08 15:12:38,270 - INFO - 
<sample>
<response>
<plan>
(up f0 f1)
(board f1 p17)
(up f1 f2)
(board f2 p10)
(depart f2 p16)
(up f2 f3)
(up f3 f4)
(up f4 f5)
(up f5 f6)
(up f6 f7)
(board f7 p9)
(board f7 p12)
(up f7 f8)
(up f8 f9)
(board f9 p11)
(depart f9 p7)
(up f9 f10)
(board f10 p0)
(board f10 p13)
(depart f10 p9)
(up f10 f11)
(up f11 f12)
(board f12 p18)
(depart f12 p10)
(up f12 f13)
(board f13 p15)
(depart f13 p6)
(depart f13 p8)
(up f13 f14)
(board f14 p8)
(up f14 f15)
(depart f15 p1)
(up f15 f16)
(board f16 p14)
(up f16 f17)
(depart f17 p18)
(up f17 f18)
(depart f18 p2)
(up f18 f19)
(depart f19 p5)
(up f19 f20)
(up f20 f21)
(board f21 p2)
(up f21 f22)
(board f22 p5)
(board f22 p16)
(up f22 f23)
(depart f23 p14)
(up f23 f24)
(board f24 p3)
(up f24 f25)
(board f25 p4)
(up f25 f26)
(depart f26 p15)
(up f26 f27)
(depart f27 p4)
(up f27 f28)
(board f28 p1)
(up f28 f29)
(board f29 p6)
(up f29 f30)
(depart f30 p13)
(up f30 f31)
(depart f31 p12)
(up f31 f32)
(up f32 f33)
(board f33 p19)
(up f33 f34)
(up f34 f35)
(depart f35 p11)
(up f35 f36)
(depart f36 p17)
(up f36 f37)
(board f37 p7)
(depart f37 p3)
(depart f37 p19)
(up f37 f38)
(up f38 f39)
(depart f39 p0)
</plan>
</response>
<metadata>
{'prompt_token_count': 13595, 'candidates_token_count': 751, 'total_tokens_count': 26640}
</metadata>
</sample>

